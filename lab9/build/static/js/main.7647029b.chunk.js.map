{"version":3,"sources":["components/Card.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Card","data","repositories","className","src","avatar_url","alt","Style","href","url","name","location","bio","map","repo","html_url","target","Search","useState","setData","UserName","SetUserName","SetRepositories","visibleForm","setFormVisible","ToggleFormVisible","submitHandler","e","a","preventDefault","fetch","profile","ok","json","profileJson","repos_url","repositoriesJson","alert","onClick","placeholder","type","value","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQA0CeA,EAxCF,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAClB,OACI,sBAAKC,UAAY,UAAjB,UAEA,sBAAKA,UAAY,QAAjB,UAEK,qBACGA,UAAU,0BACVC,IAAKH,EAAKI,WACVC,IAAKL,EAAKI,aAGd,sBAAKF,UAAY,OAAjB,UACA,qBAAKI,MAAQ,oBAAb,mDADA,IAC+C,mBAAGC,KAAQP,EAAKQ,IAAhB,SAAsBR,EAAKQ,MAC1E,qBAAKF,MAAQ,oBAAb,mCAFA,IAEgDN,EAAKS,KAAsB,8BAAMT,EAAKS,OAA1B,0DAC5D,qBAAKH,MAAQ,oBAAb,mGAHA,IAGyDN,EAAKU,SAA0B,8BAAMV,EAAKU,WAA1B,0DACzE,qBAAKJ,MAAQ,oBAAb,iCAJA,IAI8CN,EAAKW,IAAqB,8BAAMX,EAAKW,MAA1B,gEAI7D,qBAAKT,UAAY,MAAjB,SACA,6BACKD,EAAaW,KAAI,SAAAC,GAAI,OACpB,qBAAKX,UAAU,0BAAf,SACE,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,qCACb,qBAAKA,UAAU,UAAf,SACE,mBAAGK,KAAMM,EAAKC,SAAUZ,UAAU,SAASa,OAAO,SAAlD,SACGF,EAAKJ,aALgCI,EAAKJ,iBCwDlDO,EA7EA,WACX,MAAwBC,mBAAS,IAAjC,mBAAOjB,EAAP,KAAakB,EAAb,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAuCH,mBAAS,IAAhD,mBAAMhB,EAAN,KAAoBoB,EAApB,KAEA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEMC,EAAoB,WACtBD,GAAgBD,IAOdG,EAAa,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DAElBD,EAAEE,iBAFgB,SAIIC,MAAM,gCAAD,OAAiCV,IAJ1C,YAIZW,EAJY,QAMNC,GANM,iCAQWD,EAAQE,OARnB,cAQTC,EARS,iBASYJ,MAAMI,EAAYC,WAT9B,eASTjC,EATS,iBAUgBA,EAAa+B,OAV7B,QAUTG,EAVS,OAaXF,IACHf,EAAQe,GACPZ,EAAgBc,IAGlBX,IAlBe,wBAoBdY,MAAM,8HApBQ,4CAAH,sDAuBnB,OACI,8BACEd,EAwBF,gCACI,cAAC,EAAD,CAAMtB,KAAMA,EAAMC,aAAcA,IAChC,yBACAC,UAAY,oBACZmC,QAAWb,EAFX,UAGA,mBAAGtB,UAAU,uBAHb,uCAzBF,sBAAKA,UAAU,YAAf,UACA,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,gBACb,uBACEA,UAAU,SACVoC,YAAY,yIACZC,KAAK,OACLC,MAAOrB,EACPsB,SAtCc,SAAAf,GACpBN,EAAYM,EAAEX,OAAOyB,aAyCjB,yBACItC,UAAU,oBACVqC,KAAO,SACPF,QAAWZ,EAHf,UAII,mBAAGvB,UAAU,gBAJjB,0CC1CGwC,EAVH,WACV,OACE,qBAAKxC,UAAY,MAAjB,SACE,qBAAKA,UAAY,OAAjB,SACI,cAAC,EAAD,SCGKyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7647029b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ data, repositories }) => {\r\n    return (\r\n        <div className = \"Profile\"> \r\n\r\n        <div className = \"Human\"> \r\n\r\n             <img\r\n                className=\"ui small circular image\"\r\n                src={data.avatar_url}\r\n                alt={data.avatar_url}\r\n              />\r\n\r\n            <div className = \"Name\">\r\n            <div Style = \"font-weight: bold\">Ссылка:</div> <a href = {data.url}>{data.url}</a>\r\n            <div Style = \"font-weight: bold\"> Имя: </div> {!data.name ? 'данных нет' : <div>{data.name}</div>} \r\n            <div Style = \"font-weight: bold\">Местоположение:</div> {!data.location ? 'данных нет' : <div>{data.location}</div>} \r\n            <div Style = \"font-weight: bold\">Био:</div> {!data.bio ? 'данных нет' : <div>{data.bio}</div>} \r\n            </div>\r\n        </div>\r\n\r\n        <div className = \"Rep\">\r\n        <td>\r\n            {repositories.map(repo => (\r\n              <div className=\"ui relaxed divided list\" key={repo.name}>\r\n                <div className=\"item\">\r\n                  <i className=\"large github middle aligned icon\"></i>\r\n                  <div className=\"content\">\r\n                    <a href={repo.html_url} className=\"header\" target=\"_blank\">\r\n                      {repo.name}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </td>\r\n          </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import \"./Search.css\";\r\nimport Card from './Card';\r\nimport React, {useState} from 'react';\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({});\r\n    const [UserName, SetUserName] = useState(\"\");\r\n    const[repositories, SetRepositories] = useState([]);\r\n\r\n    const [visibleForm, setFormVisible] = useState(false);\r\n\r\n    const ToggleFormVisible = () => {\r\n        setFormVisible(!visibleForm);\r\n    }\r\n\r\n    const onChangeHandler = e => {\r\n        SetUserName(e.target.value);\r\n    }\r\n\r\n    const submitHandler = async e => {\r\n\r\n        e.preventDefault();\r\n\r\n        const profile = await fetch(`https://api.github.com/users/${UserName}`);\r\n\r\n        if (profile.ok) {\r\n\r\n           const profileJson = await profile.json();    \r\n           const repositories = await fetch(profileJson.repos_url);\r\n           const repositoriesJson = await repositories.json();\r\n    \r\n\r\n           if (profileJson) {\r\n            setData(profileJson);\r\n             SetRepositories(repositoriesJson);\r\n           }\r\n\r\n           ToggleFormVisible();\r\n        }\r\n       else alert('Пользователь не найден');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {!visibleForm ?\r\n          <div className=\"ui search\">\r\n          <div className=\"ui icon input\">\r\n            <i className=\"search icon\"></i>\r\n            <input\r\n              className=\"prompt\"\r\n              placeholder=\"Введите имя пользователя\"\r\n              type=\"text\"\r\n              value={UserName}\r\n              onChange={onChangeHandler}\r\n            />\r\n            </div>\r\n\r\n            <button \r\n                className=\"ui primary button\"\r\n                type = \"submit\" \r\n                onClick = {submitHandler}>\r\n                <i className=\"github icon\"></i>\r\n            Поиск\r\n            </button>\r\n            </div> \r\n\r\n            :\r\n            \r\n        <div>\r\n            <Card data={data} repositories={repositories}/>\r\n            <button \r\n            className = \"ui primary button\"\r\n            onClick = {ToggleFormVisible}>\r\n            <i className=\"heart outline icon\"></i>\r\n            Назад</button>\r\n            </div>\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import \"./App.css\";\nimport React from 'react';\nimport Search from './components/Search'\n\n\nconst App = () => {\n  return (\n    <div className = \"App\">\n      <div className = \"main\">\n          <Search />\n      </div>     \n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}